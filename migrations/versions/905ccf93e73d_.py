"""empty message

Revision ID: 905ccf93e73d
Revises: None
Create Date: 2018-12-01 03:23:35.302436

"""

# revision identifiers, used by Alembic.
revision = '905ccf93e73d'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('steam_id', sa.String(length=40), nullable=True),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('steam_id')
    )
    op.create_table('game_server',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('display_name', sa.String(length=32), nullable=True),
    sa.Column('ip_string', sa.String(length=32), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('rcon_password', sa.String(length=32), nullable=True),
    sa.Column('in_use', sa.Boolean(), nullable=True),
    sa.Column('public_server', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_server_public_server'), 'game_server', ['public_server'], unique=False)
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('tag', sa.String(length=40), nullable=True),
    sa.Column('flag', sa.String(length=4), nullable=True),
    sa.Column('logo', sa.String(length=10), nullable=True),
    sa.Column('auths', sa.PickleType(), nullable=True),
    sa.Column('public_team', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_public_team'), 'team', ['public_team'], unique=False)
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('team1_id', sa.Integer(), nullable=True),
    sa.Column('team2_id', sa.Integer(), nullable=True),
    sa.Column('team1_string', sa.String(length=32), nullable=True),
    sa.Column('team2_string', sa.String(length=32), nullable=True),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.Column('plugin_version', sa.String(length=32), nullable=True),
    sa.Column('forfeit', sa.Boolean(), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('max_maps', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=60), nullable=True),
    sa.Column('skip_veto', sa.Boolean(), nullable=True),
    sa.Column('api_key', sa.String(length=32), nullable=True),
    sa.Column('veto_mappool', sa.String(length=500), nullable=True),
    sa.Column('team1_score', sa.Integer(), nullable=True),
    sa.Column('team2_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['game_server.id'], ),
    sa.ForeignKeyConstraint(['team1_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['team2_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['winner'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_server_id'), 'match', ['server_id'], unique=False)
    op.create_table('map_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('map_number', sa.Integer(), nullable=True),
    sa.Column('map_name', sa.String(length=64), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.Column('team1_score', sa.Integer(), nullable=True),
    sa.Column('team2_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['winner'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('map_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('steam_id', sa.String(length=40), nullable=True),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('roundsplayed', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('flashbang_assists', sa.Integer(), nullable=True),
    sa.Column('teamkills', sa.Integer(), nullable=True),
    sa.Column('suicides', sa.Integer(), nullable=True),
    sa.Column('headshot_kills', sa.Integer(), nullable=True),
    sa.Column('damage', sa.Integer(), nullable=True),
    sa.Column('bomb_plants', sa.Integer(), nullable=True),
    sa.Column('bomb_defuses', sa.Integer(), nullable=True),
    sa.Column('v1', sa.Integer(), nullable=True),
    sa.Column('v2', sa.Integer(), nullable=True),
    sa.Column('v3', sa.Integer(), nullable=True),
    sa.Column('v4', sa.Integer(), nullable=True),
    sa.Column('v5', sa.Integer(), nullable=True),
    sa.Column('k1', sa.Integer(), nullable=True),
    sa.Column('k2', sa.Integer(), nullable=True),
    sa.Column('k3', sa.Integer(), nullable=True),
    sa.Column('k4', sa.Integer(), nullable=True),
    sa.Column('k5', sa.Integer(), nullable=True),
    sa.Column('firstkill_t', sa.Integer(), nullable=True),
    sa.Column('firstkill_ct', sa.Integer(), nullable=True),
    sa.Column('firstdeath_t', sa.Integer(), nullable=True),
    sa.Column('firstdeath_Ct', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['map_stats.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('player_stats')
    op.drop_table('map_stats')
    op.drop_index(op.f('ix_match_server_id'), table_name='match')
    op.drop_table('match')
    op.drop_index(op.f('ix_team_public_team'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_game_server_public_server'), table_name='game_server')
    op.drop_table('game_server')
    op.drop_table('user')
    ### end Alembic commands ###
